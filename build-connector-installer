#!/bin/bash

print_usage(){
  echo "Usage: build-connector-installer <connector-name> <path/to/app>"
}

get_meshblu_config(){
  meshblu-util register --type "device:${connector}"
}

get_key(){
  local uuid="$1"
  local token="$2"
  local generateResult="$(curl -XPOST --silent "https://${uuid}:${token}@meshblu-otp.octoblu.com/generate")"
  local key="$(get_value_from_json "$generateResult" "key")"
  echo "$key"
}

get_value_from_json(){
  local jsonStr="$1"
  local key="$2"
  local value="$(echo "$jsonStr" | jq --raw-output ".${key}")"
  echo "$value"
}

rename_app_file(){
  local appFile="$1"
  local connector="$2"
  local key="$3"
  local appPath="$(dirname "$appFile")"
  cp -r "$appFile" "${appPath}/${connector}-${key}.app"
}

main(){
  if [ "$1" == "--help" -o "$1" == "-h" -o "$1" == "help" -o "$1" == "-?" ]; then
    print_usage
    exit 1
  fi
  local connector="$1"
  local appFile="$2"

  if [ -z "$connector" ]; then
    print_usage
    echo "Missing connector"
    exit 1
  fi

  if [ -z "$appFile" ]; then
    print_usage
    echo "Missing app file"
    exit 1
  fi

  if [ -f "$appFile" ]; then
    print_usage
    echo "Invalid app file"
    exit 1
  fi

  echo "* registering with meshblu"
  local meshbluConfig="$(get_meshblu_config)"
  local uuid="$(get_value_from_json "$meshbluConfig" "uuid")"
  local token="$(get_value_from_json "$meshbluConfig" "token")"

  echo "* generating key"
  local key="$(get_key "$uuid" "$token")"

  echo "* renaming app"
  rename_app_file "$appFile" "$connector" "$key"
}

main $@
