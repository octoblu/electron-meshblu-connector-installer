#!/bin/bash

print_usage(){
  echo "Usage: create-test-key"
  echo "** This will create a say-hello test OTP **"
}

get_meshblu_config(){
  meshblu-util register --type "device:${connector}"
}

generate_otp(){
  local uuid="$1"
  local token="$2"
  local json="{ \
    \"connector\": \"say-hello\", \
    \"githubSlug\": \"octoblu/meshblu-connector-say-hello\", \
    \"dependencyManagerVersion\": \"v3.0.6\", \
    \"ignitionVersion\": \"v6.0.0\", \
    \"connectorAssemblerVersion\": \"v14.0.0\", \
    \"installerVersion\": \"v2.0.1\", \
    \"tag\": \"v6.0.0\"
  }"

  curl -XPOST \
    --silent \
    -H 'Content-Type: application/json' \
    -d "$json" \
    "https://${uuid}:${token}@meshblu-otp.octoblu.com/generate"
}

get_key(){
  local uuid="$1"
  local token="$2"
  local generateResult="$(generate_otp "$uuid" "$token")"
  local key="$(get_value_from_json "$generateResult" "key")"
  echo "$key"
}

get_value_from_json(){
  local jsonStr="$1"
  local key="$2"
  local value="$(echo "$jsonStr" | jq --raw-output ".${key}")"
  echo "$value"
}

main(){
  if [ "$1" == "--help" -o "$1" == "-h" -o "$1" == "help" -o "$1" == "-?" ]; then
    print_usage
    exit 1
  fi

  local meshbluConfig="$(get_meshblu_config)"
  local uuid="$(get_value_from_json "$meshbluConfig" "uuid")"
  local token="$(get_value_from_json "$meshbluConfig" "token")"

  get_key "$uuid" "$token"
}

main "$@"
